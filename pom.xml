<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.yffd.easy</groupId>
  <artifactId>easy-parent</artifactId>
  <version>0.0.1</version>
  <packaging>pom</packaging>

  <modules>
  	<module>easy-common-core</module>
    <module>easy-common-support</module>
    <module>easy-framework-pojo</module>
    <module>easy-framework-common</module>
    <module>easy-framework-web</module>
    <module>easy-common-shiro</module>
    <module>easy-common-shiro-web</module>
    <module>easy-demo</module>
    <module>easy-bcap</module>
  </modules>

	<!-- 定义公共变量 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- apache -->
		<commons.io.version>2.5</commons.io.version>
		<!-- dataSource -->
		<mysql.connector.java.version>5.1.30</mysql.connector.java.version>
    	<druid.version>1.0.5</druid.version>
		<!-- log -->
		<slf4j.log4j12.version>1.6.2</slf4j.log4j12.version>
		<slf4j.api.version>1.6.2</slf4j.api.version>
		<!-- servlet -->
		<javax.servlet.api.version>3.1.0</javax.servlet.api.version>
		<jsp.api.version>2.2</jsp.api.version>
		<jstl.version>1.2</jstl.version>
		<!-- jdk -->
		<jdk.version>1.7</jdk.version>
		<junit.version>4.12</junit.version>
		<!-- maven plugin -->
		<maven.surefire.plugin.version>2.4.2</maven.surefire.plugin.version>
		<maven.jar.plugin.version>2.3.2</maven.jar.plugin.version>
		<maven.dependency.plugin.version>2.8</maven.dependency.plugin.version>
		<maven.war.plugin.version>2.1.1</maven.war.plugin.version>
		<maven.source.plugin.version>2.1.1</maven.source.plugin.version>
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.install.plugin.version>2.3.1</maven.install.plugin.version>
		<maven.deploy.plugin.version>2.7</maven.deploy.plugin.version>
		<jetty.maven.plugin.version>8.1.16.v20140903</jetty.maven.plugin.version>
	</properties>

	<!-- 依赖管理 -->
	<dependencyManagement>
		<dependencies>
			<!-- apache start -->
			<dependency>
	    		<groupId>commons-io</groupId>
    			<artifactId>commons-io</artifactId>
	    		<version>${commons.io.version}</version>
			</dependency>
			<!-- apache end -->
			<!-- DataSource start -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.connector.java.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!-- DataSource end -->
			<!-- Logging start -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.log4j12.version}</version>
			</dependency>
			<!-- Logging end -->
			<!-- Servlet start -->
			<dependency>
				<groupId>javax.servlet</groupId>
        		<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Servlet end -->
			<!-- test start -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- test end -->
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- 单元测试插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<skipTests>true</skipTests><!-- true: 在 package、install等阶段，跳过运行测试的配置 -->
					</configuration>
				</plugin>
				<plugin>
					<!-- 打jar包插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- 打jar包时，将依赖的jar放入到lib目录下 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<type>jar</type>
								<includeTypes>jar</includeTypes>
								<useUniqueVersions>false</useUniqueVersions>
								<outputDirectory>
									${project.build.directory}/lib
								</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- 打war包插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- 源码插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
					<!-- 发布时自动将源码同时发布的配置 -->
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- 编译插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<fork>true</fork><!-- fork一般在使用不同于默认的JDK去编译的时候才用 -->
						<source>${jdk.version}</source><!-- 源代码使用的开发版本 -->
						<target>${jdk.version}</target><!-- 需要生成的目标class文件的编译版本 -->
						<encoding>${project.build.sourceEncoding}</encoding>
						<compilerArgs>
							<arg>-XX:MaxPermSize=512M</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<!-- 安装插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- 发布插件 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- jetty插件 -->
					<groupId>org.mortbay.jetty</groupId>
		    		<artifactId>jetty-maven-plugin</artifactId>
		    		<version>${jetty.maven.plugin.version}</version>
					<configuration>
						<scanIntervalSeconds>10</scanIntervalSeconds>
		                <scanTargetPatterns>
		               	    <scanTargetPattern>
		               	   	  <directory>src/main/resources</directory>
		               	    </scanTargetPattern>
		                </scanTargetPatterns>
		                <webApp>
		                	<contextPath>/</contextPath>
					    </webApp>
					    <connectors>
					    	<!-- implementation="org.mortbay.jetty.nio.SelectChannelConnector" jetty7以下 -->
					    	<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
					    		<port>8080</port>
					    		<maxIdleTime>60000</maxIdleTime>
					    	</connector>
					    </connectors>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<!-- 单元测试插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<!-- 编译插件，指定JDK版本 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- 打包jar包插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<index>true</index>
						<manifest>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- 打jar包时，将依赖的jar放入到lib目录下 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<useUniqueVersions>false</useUniqueVersions>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- 源码插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- 发布插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- developer -->
	<developers>
		<developer>
			<name>zhangST</name>
			<id>zhang.shitao</id>
			<email>yffd2014@sina.com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>
</project>