<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.uupm.dao.UupmAccountDao">


	<!-- ######################################################################### -->
	<!-- #########################   common sql begin    ######################### -->
	<!-- ######################################################################### -->
	
	<!-- 表名 -->
	<sql id="table_name"> uupm_account </sql>
	<!-- 列名 -->
	<sql id="table_columns">
		t.VERSION as version, t.DEL_FLAG as delFlag, t.CREATE_BY as createBy, t.CREATE_TIME as createTime, t.UPDATE_BY as updateBy, 
		t.UPDATE_TIME as updateTime, t.TENANT_CODE as tenantCode, t.ID as id, t.ACCOUNT_ID as accountId, t.ACCOUNT_PWD as accountPwd, 
		t.ACCOUNT_STATUS as accountStatus, t.ACCOUNT_TYPE as accountType, t.NICK_NAME as nickName, t.ONLINE as online, t.SALT as salt, 
		t.VISIT_COUNT as visitCount, t.VISIT_FIRST as visitFirst, t.VISIT_IP as visitIp, t.VISIT_LAST as visitLast, t.VISIT_PREVIOUS as visitPrevious
	</sql>
	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="page != null"> limit #{page.startIndex}, #{page.pageLimit} </if></sql>
	<!-- 排序条件 -->
	<sql id="conditions_orderby">
		<choose>
			<when test="orderBy != null and orderBy !=''"> ORDER BY #{orderBy} </when>
			<otherwise> ORDER BY id desc </otherwise>
		</choose>
	</sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<if test="entity != null">
			<!-- Equal query -->
			<if test="entity.version != null "> and t.VERSION = #{entity.version} </if>
			<if test="entity.delFlag != null and entity.delFlag != ''"> and t.DEL_FLAG = #{entity.delFlag} </if>
			<if test="entity.createBy != null and entity.createBy != ''"> and t.CREATE_BY = #{entity.createBy} </if>
			<if test="entity.createTime != null "><![CDATA[ and t.CREATE_TIME = #{entity.createTime}]]> </if>
			<if test="entity.updateBy != null and entity.updateBy != ''"> and t.UPDATE_BY = #{entity.updateBy} </if>
			<if test="entity.updateTime != null "><![CDATA[ and t.UPDATE_TIME = #{entity.updateTime}]]> </if>
			<if test="entity.tenantCode != null and entity.tenantCode != ''"> and t.TENANT_CODE = #{entity.tenantCode} </if>
			<if test="entity.id != null and entity.id != ''"> and t.ID = #{entity.id} </if>
			<if test="entity.accountId != null and entity.accountId != ''"> and t.ACCOUNT_ID = #{entity.accountId} </if>
			<if test="entity.accountPwd != null and entity.accountPwd != ''"> and t.ACCOUNT_PWD = #{entity.accountPwd} </if>
			<if test="entity.accountStatus != null and entity.accountStatus != ''"> and t.ACCOUNT_STATUS = #{entity.accountStatus} </if>
			<if test="entity.accountType != null and entity.accountType != ''"> and t.ACCOUNT_TYPE = #{entity.accountType} </if>
			<if test="entity.online != null and entity.online != ''"> and t.ONLINE = #{entity.online} </if>
			<if test="entity.salt != null and entity.salt != ''"> and t.SALT = #{entity.salt} </if>
			<if test="entity.visitCount != null "> and t.VISIT_COUNT = #{entity.visitCount} </if>
			<if test="entity.visitFirst != null "><![CDATA[ and t.VISIT_FIRST = #{entity.visitFirst}]]> </if>
			<if test="entity.visitIp != null and entity.visitIp != ''"> and t.VISIT_IP = #{entity.visitIp} </if>
			<if test="entity.visitLast != null "><![CDATA[ and t.VISIT_LAST = #{entity.visitLast}]]> </if>
			<if test="entity.visitPrevious != null "><![CDATA[ and t.VISIT_PREVIOUS = #{entity.visitPrevious}]]> </if>
			<!-- Like query -->
			<if test="entity.nickName != null and entity.nickName != ''"> and t.NICK_NAME like CONCAT(CONCAT('%', #{entity.nickName}), '%') </if>
		</if>
		<if test="propsMap != null">
			<!-- In query -->
			<if test="propsMap.tenantCodeIter != null and propsMap.tenantCodeIter.size()>0">
			and t.TENANT_CODE in <foreach item="item" index="index" collection="propsMap.tenantCodeIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.idIter != null and propsMap.idIter.size()>0">
			and t.ID in <foreach item="item" index="index" collection="propsMap.idIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountIdIter != null and propsMap.accountIdIter.size()>0">
			and t.ACCOUNT_ID in <foreach item="item" index="index" collection="propsMap.accountIdIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountPwdIter != null and propsMap.accountPwdIter.size()>0">
			and t.ACCOUNT_PWD in <foreach item="item" index="index" collection="propsMap.accountPwdIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountStatusIter != null and propsMap.accountStatusIter.size()>0">
			and t.ACCOUNT_STATUS in <foreach item="item" index="index" collection="propsMap.accountStatusIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountTypeIter != null and propsMap.accountTypeIter.size()>0">
			and t.ACCOUNT_TYPE in <foreach item="item" index="index" collection="propsMap.accountTypeIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.nickNameIter != null and propsMap.nickNameIter.size()>0">
			and t.NICK_NAME in <foreach item="item" index="index" collection="propsMap.nickNameIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.onlineIter != null and propsMap.onlineIter.size()>0">
			and t.ONLINE in <foreach item="item" index="index" collection="propsMap.onlineIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.saltIter != null and propsMap.saltIter.size()>0">
			and t.SALT in <foreach item="item" index="index" collection="propsMap.saltIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.visitCountIter != null and propsMap.visitCountIter.size()>0">
			and t.VISIT_COUNT in <foreach item="item" index="index" collection="propsMap.visitCountIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.visitIpIter != null and propsMap.visitIpIter.size()>0">
			and t.VISIT_IP in <foreach item="item" index="index" collection="propsMap.visitIpIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
		</if>
	</sql>
	<!-- 条件查询 -->
	<select id="selectListBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.entity.UupmAccountEntity">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>
	<!-- 统计查询 -->
	<select id="selectCountBy" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from 
		<include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.entity.UupmAccountEntity">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条插入 -->
	<insert id="insertOneBy" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, ACCOUNT_ID, ACCOUNT_PWD, ACCOUNT_STATUS, ACCOUNT_TYPE, NICK_NAME, ONLINE, SALT, VISIT_COUNT, VISIT_FIRST, VISIT_IP, VISIT_LAST, VISIT_PREVIOUS)
		values
		(#{version}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{tenantCode}, #{accountId}, #{accountPwd}, #{accountStatus}, #{accountType}, #{nickName}, #{online}, #{salt}, #{visitCount}, #{visitFirst}, #{visitIp}, #{visitLast}, #{visitPrevious})
	</insert>
	<!-- 批量插入 -->
	<insert id="insertListBy" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TENANT_CODE, ACCOUNT_ID, ACCOUNT_PWD, ACCOUNT_STATUS, ACCOUNT_TYPE, NICK_NAME, ONLINE, SALT, VISIT_COUNT, VISIT_FIRST, VISIT_IP, VISIT_LAST, VISIT_PREVIOUS)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.version},#{item.delFlag},#{item.createBy},#{item.createTime},#{item.updateBy},
		#{item.updateTime},#{item.tenantCode},#{item.accountId},#{item.accountPwd},#{item.accountStatus},
		#{item.accountType},#{item.nickName},#{item.online},#{item.salt},#{item.visitCount},
		#{item.visitFirst},#{item.visitIp},#{item.visitLast},#{item.visitPrevious})
		</foreach>
	</insert>
	<!-- 更新 -->
	<update id="updateBy" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="entity != null">
			VERSION = VERSION + 1, 
			<if test="entity.delFlag != null and entity.delFlag != ''"> DEL_FLAG = #{entity.delFlag},  </if>
			<if test="entity.updateBy != null and entity.updateBy != ''"> UPDATE_BY = #{entity.updateBy},  </if>
			<if test="entity.updateTime != null"> UPDATE_TIME = #{entity.updateTime},  </if>
			<if test="entity.tenantCode != null and entity.tenantCode != ''"> TENANT_CODE = #{entity.tenantCode},  </if>
			<if test="entity.accountId != null and entity.accountId != ''"> ACCOUNT_ID = #{entity.accountId},  </if>
			<if test="entity.accountPwd != null and entity.accountPwd != ''"> ACCOUNT_PWD = #{entity.accountPwd},  </if>
			<if test="entity.accountStatus != null and entity.accountStatus != ''"> ACCOUNT_STATUS = #{entity.accountStatus},  </if>
			<if test="entity.accountType != null and entity.accountType != ''"> ACCOUNT_TYPE = #{entity.accountType},  </if>
			<if test="entity.nickName != null and entity.nickName != ''"> NICK_NAME = #{entity.nickName},  </if>
			<if test="entity.online != null and entity.online != ''"> ONLINE = #{entity.online},  </if>
			<if test="entity.salt != null and entity.salt != ''"> SALT = #{entity.salt},  </if>
			<if test="entity.visitCount != null"> VISIT_COUNT = #{entity.visitCount},  </if>
			<if test="entity.visitFirst != null"> VISIT_FIRST = #{entity.visitFirst},  </if>
			<if test="entity.visitIp != null and entity.visitIp != ''"> VISIT_IP = #{entity.visitIp},  </if>
			<if test="entity.visitLast != null"> VISIT_LAST = #{entity.visitLast},  </if>
			<if test="entity.visitPrevious != null"> VISIT_PREVIOUS = #{entity.visitPrevious},  </if>
		</if>
		</set>
		<where>
		<choose>
		<when test="entityOld != null or propsMap != null">
		<if test="entityOld != null">
			<!-- Equal query -->
			<if test="entityOld.version != null "> and VERSION = #{entityOld.version} </if>
			<if test="entityOld.delFlag != null and entityOld.delFlag != ''"> and DEL_FLAG = #{entityOld.delFlag} </if>
			<if test="entityOld.createBy != null and entityOld.createBy != ''"> and CREATE_BY = #{entityOld.createBy} </if>
			<if test="entityOld.createTime != null "><![CDATA[ and CREATE_TIME = #{entityOld.createTime}]]> </if>
			<if test="entityOld.updateBy != null and entityOld.updateBy != ''"> and UPDATE_BY = #{entityOld.updateBy} </if>
			<if test="entityOld.updateTime != null "><![CDATA[ and UPDATE_TIME = #{entityOld.updateTime}]]> </if>
			<if test="entityOld.tenantCode != null and entityOld.tenantCode != ''"> and TENANT_CODE = #{entityOld.tenantCode} </if>
			<if test="entityOld.id != null and entityOld.id != ''"> and ID = #{entityOld.id} </if>
			<if test="entityOld.accountId != null and entityOld.accountId != ''"> and ACCOUNT_ID = #{entityOld.accountId} </if>
			<if test="entityOld.accountPwd != null and entityOld.accountPwd != ''"> and ACCOUNT_PWD = #{entityOld.accountPwd} </if>
			<if test="entityOld.accountStatus != null and entityOld.accountStatus != ''"> and ACCOUNT_STATUS = #{entityOld.accountStatus} </if>
			<if test="entityOld.accountType != null and entityOld.accountType != ''"> and ACCOUNT_TYPE = #{entityOld.accountType} </if>
			<if test="entityOld.nickName != null and entityOld.nickName != ''"> and NICK_NAME = #{entityOld.nickName} </if>
			<if test="entityOld.online != null and entityOld.online != ''"> and ONLINE = #{entityOld.online} </if>
			<if test="entityOld.salt != null and entityOld.salt != ''"> and SALT = #{entityOld.salt} </if>
			<if test="entityOld.visitCount != null "> and VISIT_COUNT = #{entityOld.visitCount} </if>
			<if test="entityOld.visitFirst != null "><![CDATA[ and VISIT_FIRST = #{entityOld.visitFirst}]]> </if>
			<if test="entityOld.visitIp != null and entityOld.visitIp != ''"> and VISIT_IP = #{entityOld.visitIp} </if>
			<if test="entityOld.visitLast != null "><![CDATA[ and VISIT_LAST = #{entityOld.visitLast}]]> </if>
			<if test="entityOld.visitPrevious != null "><![CDATA[ and VISIT_PREVIOUS = #{entityOld.visitPrevious}]]> </if>
		</if>
		<if test="propsMap != null">
			<!-- In query -->
			<if test="propsMap.tenantCodeIter != null and propsMap.tenantCodeIter.size()>0">
			and TENANT_CODE in <foreach item="item" index="index" collection="propsMap.tenantCodeIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.idIter != null and propsMap.idIter.size()>0">
			and ID in <foreach item="item" index="index" collection="propsMap.idIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountIdIter != null and propsMap.accountIdIter.size()>0">
			and ACCOUNT_ID in <foreach item="item" index="index" collection="propsMap.accountIdIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountPwdIter != null and propsMap.accountPwdIter.size()>0">
			and ACCOUNT_PWD in <foreach item="item" index="index" collection="propsMap.accountPwdIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountStatusIter != null and propsMap.accountStatusIter.size()>0">
			and ACCOUNT_STATUS in <foreach item="item" index="index" collection="propsMap.accountStatusIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountTypeIter != null and propsMap.accountTypeIter.size()>0">
			and ACCOUNT_TYPE in <foreach item="item" index="index" collection="propsMap.accountTypeIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.nickNameIter != null and propsMap.nickNameIter.size()>0">
			and NICK_NAME in <foreach item="item" index="index" collection="propsMap.nickNameIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.onlineIter != null and propsMap.onlineIter.size()>0">
			and ONLINE in <foreach item="item" index="index" collection="propsMap.onlineIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.saltIter != null and propsMap.saltIter.size()>0">
			and SALT in <foreach item="item" index="index" collection="propsMap.saltIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.visitCountIter != null and propsMap.visitCountIter.size()>0">
			and VISIT_COUNT in <foreach item="item" index="index" collection="propsMap.visitCountIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.visitIpIter != null and propsMap.visitIpIter.size()>0">
			and VISIT_IP in <foreach item="item" index="index" collection="propsMap.visitIpIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
		</if>
		</when>
		<otherwise>
		<!-- 防止没有参数传递，导致全部更新 -->
		and 1=2
		</otherwise>
		</choose>
		</where>
	</update>
	<!-- 删除 -->
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<choose>
		<when test="entity != null or propsMap != null">
		<if test="entity != null">
			<!-- Equal query -->
			<if test="entity.version != null "> and VERSION = #{entity.version} </if>
			<if test="entity.delFlag != null and entity.delFlag != ''"> and DEL_FLAG = #{entity.delFlag} </if>
			<if test="entity.createBy != null and entity.createBy != ''"> and CREATE_BY = #{entity.createBy} </if>
			<if test="entity.createTime != null "><![CDATA[ and CREATE_TIME = #{entity.createTime}]]> </if>
			<if test="entity.updateBy != null and entity.updateBy != ''"> and UPDATE_BY = #{entity.updateBy} </if>
			<if test="entity.updateTime != null "><![CDATA[ and UPDATE_TIME = #{entity.updateTime}]]> </if>
			<if test="entity.tenantCode != null and entity.tenantCode != ''"> and TENANT_CODE = #{entity.tenantCode} </if>
			<if test="entity.id != null and entity.id != ''"> and ID = #{entity.id} </if>
			<if test="entity.accountId != null and entity.accountId != ''"> and ACCOUNT_ID = #{entity.accountId} </if>
			<if test="entity.accountPwd != null and entity.accountPwd != ''"> and ACCOUNT_PWD = #{entity.accountPwd} </if>
			<if test="entity.accountStatus != null and entity.accountStatus != ''"> and ACCOUNT_STATUS = #{entity.accountStatus} </if>
			<if test="entity.accountType != null and entity.accountType != ''"> and ACCOUNT_TYPE = #{entity.accountType} </if>
			<if test="entity.nickName != null and entity.nickName != ''"> and NICK_NAME = #{entity.nickName} </if>
			<if test="entity.online != null and entity.online != ''"> and ONLINE = #{entity.online} </if>
			<if test="entity.salt != null and entity.salt != ''"> and SALT = #{entity.salt} </if>
			<if test="entity.visitCount != null "> and VISIT_COUNT = #{entity.visitCount} </if>
			<if test="entity.visitFirst != null "><![CDATA[ and VISIT_FIRST = #{entity.visitFirst}]]> </if>
			<if test="entity.visitIp != null and entity.visitIp != ''"> and VISIT_IP = #{entity.visitIp} </if>
			<if test="entity.visitLast != null "><![CDATA[ and VISIT_LAST = #{entity.visitLast}]]> </if>
			<if test="entity.visitPrevious != null "><![CDATA[ and VISIT_PREVIOUS = #{entity.visitPrevious}]]> </if>
		</if>
		<if test="propsMap != null">
			<!-- In query -->
			<if test="propsMap.tenantCodeIter != null and propsMap.tenantCodeIter.size()>0">
			and TENANT_CODE in <foreach item="item" index="index" collection="propsMap.tenantCodeIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.idIter != null and propsMap.idIter.size()>0">
			and ID in <foreach item="item" index="index" collection="propsMap.idIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountIdIter != null and propsMap.accountIdIter.size()>0">
			and ACCOUNT_ID in <foreach item="item" index="index" collection="propsMap.accountIdIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountPwdIter != null and propsMap.accountPwdIter.size()>0">
			and ACCOUNT_PWD in <foreach item="item" index="index" collection="propsMap.accountPwdIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountStatusIter != null and propsMap.accountStatusIter.size()>0">
			and ACCOUNT_STATUS in <foreach item="item" index="index" collection="propsMap.accountStatusIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.accountTypeIter != null and propsMap.accountTypeIter.size()>0">
			and ACCOUNT_TYPE in <foreach item="item" index="index" collection="propsMap.accountTypeIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.nickNameIter != null and propsMap.nickNameIter.size()>0">
			and NICK_NAME in <foreach item="item" index="index" collection="propsMap.nickNameIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.onlineIter != null and propsMap.onlineIter.size()>0">
			and ONLINE in <foreach item="item" index="index" collection="propsMap.onlineIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.saltIter != null and propsMap.saltIter.size()>0">
			and SALT in <foreach item="item" index="index" collection="propsMap.saltIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.visitCountIter != null and propsMap.visitCountIter.size()>0">
			and VISIT_COUNT in <foreach item="item" index="index" collection="propsMap.visitCountIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="propsMap.visitIpIter != null and propsMap.visitIpIter.size()>0">
			and VISIT_IP in <foreach item="item" index="index" collection="propsMap.visitIpIter" open="(" separator="," close=") ">#{item}</foreach>
			</if>
		</if>
		</when>
		<otherwise>
		<!-- 防止没有参数传递，导致全部删除 -->
		and 1=2
		</otherwise>
		</choose>
		</where>
	</delete>
	<!-- ######################################################################### -->
	<!-- ##########################   common sql end    ########################## -->
	<!-- ######################################################################### -->

	<select id="findLoginInfo" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.pojo.vo.UupmLoginInfoVo">
		select t.ACCOUNT_ID as accountId, t.ACCOUNT_PWD as accountPwd, t.ACCOUNT_STATUS as accountStatus, t.SALT as salt 
		, u.USER_CODE as userCode, u.USER_NAME as userName
		, org.ORG_CODE as orgCode, org.ORG_NAME as orgName, org.DATA_PATH as dataPath
		from uupm_account t
		LEFT JOIN uupm_user u ON t.ACCOUNT_ID = u.USER_CODE
		LEFT JOIN uupm_organization org ON u.TENANT_CODE = org.TENANT_CODE and u.ORG_CODE = org.ORG_CODE
		where t.ACCOUNT_ID = #{accountId}
	</select>
	
</mapper>
