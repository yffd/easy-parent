<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.uupm.mapper.IUupmDictionaryMapper">


	<!-- ######################################################################### -->
	<!-- #########################   common sql begin    ######################### -->
	<!-- ######################################################################### -->
	
	<!-- 表名 -->
	<sql id="table_name"> uupm_dictionary </sql>
	<!-- 列名 -->
	<sql id="table_columns">
		t.VERSION as version, t.DEL_FLAG as delFlag, t.CREATE_BY as createBy, t.CREATE_TIME as createTime, t.UPDATE_BY as updateBy, 
		t.UPDATE_TIME as updateTime, t.TREE_ID as treeId, t.NODE_LAYER as nodeLayer, t.NODE_LEFT as nodeLeft, t.NODE_RIGHT as nodeRight, 
		t.NODE_CODE as nodeCode, t.TENANT_CODE as tenantCode, t.ID as id, t.KEY_CODE as keyCode, t.KEY_NAME as keyName, 
		t.PARENT_CODE as parentCode, t.SEQ_NO as seqNo, t.VALUE_CONTENT as valueContent, t.VALUE_STATUS as valueStatus
	</sql>
	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="page != null"> limit #{page.startIndex}, #{page.pageLimit} </if></sql>
	<!-- 排序条件 -->
	<sql id="conditions_orderby"> ORDER BY t.CREATE_TIME desc </sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<if test="model != null">
			<!-- Equal query -->
			<if test="model.version != null "> and t.VERSION = #{model.version} </if>
			<if test="model.delFlag != null and model.delFlag != ''"> and t.DEL_FLAG = #{model.delFlag} </if>
			<if test="model.createBy != null and model.createBy != ''"> and t.CREATE_BY = #{model.createBy} </if>
			<if test="model.createTime != null "><![CDATA[ and t.CREATE_TIME = #{model.createTime}]]> </if>
			<if test="model.updateBy != null and model.updateBy != ''"> and t.UPDATE_BY = #{model.updateBy} </if>
			<if test="model.updateTime != null "><![CDATA[ and t.UPDATE_TIME = #{model.updateTime}]]> </if>
			<if test="model.treeId != null and model.treeId != ''"> and t.TREE_ID = #{model.treeId} </if>
			<if test="model.nodeLayer != null "> and t.NODE_LAYER = #{model.nodeLayer} </if>
			<if test="model.nodeCode != null and model.nodeCode != ''"> and t.NODE_CODE = #{model.nodeCode} </if>
			<if test="model.tenantCode != null and model.tenantCode != ''"> and t.TENANT_CODE = #{model.tenantCode} </if>
			<if test="model.id != null and model.id != ''"> and t.ID = #{model.id} </if>
			<if test="model.keyCode != null and model.keyCode != ''"> and t.KEY_CODE = #{model.keyCode} </if>
			<if test="model.parentCode != null and model.parentCode != ''"> and t.PARENT_CODE = #{model.parentCode} </if>
			<if test="model.seqNo != null "> and t.SEQ_NO = #{model.seqNo} </if>
			<if test="model.valueContent != null and model.valueContent != ''"> and t.VALUE_CONTENT = #{model.valueContent} </if>
			<if test="model.valueStatus != null and model.valueStatus != ''"> and t.VALUE_STATUS = #{model.valueStatus} </if>
			<!-- Like query -->
			<if test="model.keyName != null and model.keyName != ''"> and t.KEY_NAME like CONCAT(CONCAT('%', #{model.keyName}), '%') </if>
		</if>
		<if test="map != null">
			<!-- Equal query -->
			<if test="map.version != null "> and t.VERSION = #{map.version} </if>
			<if test="map.delFlag != null and map.delFlag != ''"> and t.DEL_FLAG = #{map.delFlag} </if>
			<if test="map.createBy != null and map.createBy != ''"> and t.CREATE_BY = #{map.createBy} </if>
			<if test="map.createTime != null "><![CDATA[ and t.CREATE_TIME = #{map.createTime}]]> </if>
			<if test="map.updateBy != null and map.updateBy != ''"> and t.UPDATE_BY = #{map.updateBy} </if>
			<if test="map.updateTime != null "><![CDATA[ and t.UPDATE_TIME = #{map.updateTime}]]> </if>
			<if test="map.treeId != null and map.treeId != ''"> and t.TREE_ID = #{map.treeId} </if>
			<if test="map.nodeLayer != null "> and t.NODE_LAYER = #{map.nodeLayer} </if>
			<if test="map.nodeCode != null and map.nodeCode != ''"> and t.NODE_CODE = #{map.nodeCode} </if>
			<if test="map.tenantCode != null and map.tenantCode != ''"> and t.TENANT_CODE = #{map.tenantCode} </if>
			<if test="map.id != null and map.id != ''"> and t.ID = #{map.id} </if>
			<if test="map.keyCode != null and map.keyCode != ''"> and t.KEY_CODE = #{map.keyCode} </if>
			<if test="map.keyName != null and map.keyName != ''"> and t.KEY_NAME = #{map.keyName} </if>
			<if test="map.parentCode != null and map.parentCode != ''"> and t.PARENT_CODE = #{map.parentCode} </if>
			<if test="map.seqNo != null "> and t.SEQ_NO = #{map.seqNo} </if>
			<if test="map.valueContent != null and map.valueContent != ''"> and t.VALUE_CONTENT = #{map.valueContent} </if>
			<if test="map.valueStatus != null and map.valueStatus != ''"> and t.VALUE_STATUS = #{map.valueStatus} </if>
			<!-- In query -->
			<if test="map.idList != null and map.idList.size()>0">
			and t.ID in <foreach item="item" index="index" collection="map.idList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.keyCodeList != null and map.keyCodeList.size()>0">
			and t.KEY_CODE in <foreach item="item" index="index" collection="map.keyCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.keyNameList != null and map.keyNameList.size()>0">
			and t.KEY_NAME in <foreach item="item" index="index" collection="map.keyNameList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.nodeCodeList != null and map.nodeCodeList.size()>0">
			and t.NODE_CODE in <foreach item="item" index="index" collection="map.nodeCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.nodeLayerList != null and map.nodeLayerList.size()>0">
			and t.NODE_LAYER in <foreach item="item" index="index" collection="map.nodeLayerList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.parentCodeList != null and map.parentCodeList.size()>0">
			and t.PARENT_CODE in <foreach item="item" index="index" collection="map.parentCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.seqNoList != null and map.seqNoList.size()>0">
			and t.SEQ_NO in <foreach item="item" index="index" collection="map.seqNoList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.tenantCodeList != null and map.tenantCodeList.size()>0">
			and t.TENANT_CODE in <foreach item="item" index="index" collection="map.tenantCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.treeIdList != null and map.treeIdList.size()>0">
			and t.TREE_ID in <foreach item="item" index="index" collection="map.treeIdList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.valueContentList != null and map.valueContentList.size()>0">
			and t.VALUE_CONTENT in <foreach item="item" index="index" collection="map.valueContentList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.valueStatusList != null and map.valueStatusList.size()>0">
			and t.VALUE_STATUS in <foreach item="item" index="index" collection="map.valueStatusList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
		</if>
	</sql>
	<!-- 条件查询 -->
	<select id="selectListBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.entity.UupmDictionaryEntity">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>
	<!-- 统计查询 -->
	<select id="selectCountBy" parameterType="java.util.Map" resultType="long">
		select count(1) from 
		<include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.entity.UupmDictionaryEntity">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条插入 -->
	<insert id="insertOne" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TREE_ID, NODE_LAYER, NODE_LEFT, NODE_RIGHT, NODE_CODE, TENANT_CODE, KEY_CODE, KEY_NAME, PARENT_CODE, SEQ_NO, VALUE_CONTENT, VALUE_STATUS)
		values
		(#{version}, #{delFlag}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{treeId}, #{nodeLayer}, #{nodeLeft}, #{nodeRight}, #{nodeCode}, #{tenantCode}, #{keyCode}, #{keyName}, #{parentCode}, #{seqNo}, #{valueContent}, #{valueStatus})
	</insert>
	<!-- 批量插入 -->
	<insert id="insertList" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="table_name" />
		(VERSION, DEL_FLAG, CREATE_BY, CREATE_TIME, UPDATE_BY, UPDATE_TIME, TREE_ID, NODE_LAYER, NODE_LEFT, NODE_RIGHT, NODE_CODE, TENANT_CODE, KEY_CODE, KEY_NAME, PARENT_CODE, SEQ_NO, VALUE_CONTENT, VALUE_STATUS)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.version},#{item.delFlag},#{item.createBy},#{item.createTime},#{item.updateBy},
		#{item.updateTime},#{item.treeId},#{item.nodeLayer},#{item.nodeLeft},#{item.nodeRight},
		#{item.nodeCode},#{item.tenantCode},#{item.keyCode},#{item.keyName},#{item.parentCode},
		#{item.seqNo},#{item.valueContent},#{item.valueStatus})
		</foreach>
	</insert>
	<!-- 更新 -->
	<update id="updateBy" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="model != null">
			<if test="model.delFlag != null and model.delFlag != ''"> DEL_FLAG = #{model.delFlag},  </if>
			<if test="model.keyCode != null and model.keyCode != ''"> KEY_CODE = #{model.keyCode},  </if>
			<if test="model.keyName != null and model.keyName != ''"> KEY_NAME = #{model.keyName},  </if>
			<if test="model.nodeCode != null and model.nodeCode != ''"> NODE_CODE = #{model.nodeCode},  </if>
			<if test="model.nodeLayer != null"> NODE_LAYER = #{model.nodeLayer},  </if>
			<if test="model.parentCode != null and model.parentCode != ''"> PARENT_CODE = #{model.parentCode},  </if>
			<if test="model.seqNo != null"> SEQ_NO = #{model.seqNo},  </if>
			<if test="model.tenantCode != null and model.tenantCode != ''"> TENANT_CODE = #{model.tenantCode},  </if>
			<if test="model.treeId != null and model.treeId != ''"> TREE_ID = #{model.treeId},  </if>
			<if test="model.updateBy != null and model.updateBy != ''"> UPDATE_BY = #{model.updateBy},  </if>
			<if test="model.updateTime != null"> UPDATE_TIME = #{model.updateTime},  </if>
			<if test="model.valueContent != null and model.valueContent != ''"> VALUE_CONTENT = #{model.valueContent},  </if>
			<if test="model.valueStatus != null and model.valueStatus != ''"> VALUE_STATUS = #{model.valueStatus},  </if>
			VERSION = VERSION + 1, 
		</if>
		</set>
		<where>
		<if test="old != null">
			<!-- Equal query -->
			<if test="old.version != null "> and VERSION = #{old.version} </if>
			<if test="old.delFlag != null and old.delFlag != ''"> and DEL_FLAG = #{old.delFlag} </if>
			<if test="old.createBy != null and old.createBy != ''"> and CREATE_BY = #{old.createBy} </if>
			<if test="old.createTime != null "><![CDATA[ and CREATE_TIME = #{old.createTime}]]> </if>
			<if test="old.updateBy != null and old.updateBy != ''"> and UPDATE_BY = #{old.updateBy} </if>
			<if test="old.updateTime != null "><![CDATA[ and UPDATE_TIME = #{old.updateTime}]]> </if>
			<if test="old.treeId != null and old.treeId != ''"> and TREE_ID = #{old.treeId} </if>
			<if test="old.nodeLayer != null "> and NODE_LAYER = #{old.nodeLayer} </if>
			<if test="old.nodeCode != null and old.nodeCode != ''"> and NODE_CODE = #{old.nodeCode} </if>
			<if test="old.tenantCode != null and old.tenantCode != ''"> and TENANT_CODE = #{old.tenantCode} </if>
			<if test="old.id != null and old.id != ''"> and ID = #{old.id} </if>
			<if test="old.keyCode != null and old.keyCode != ''"> and KEY_CODE = #{old.keyCode} </if>
			<if test="old.keyName != null and old.keyName != ''"> and KEY_NAME = #{old.keyName} </if>
			<if test="old.parentCode != null and old.parentCode != ''"> and PARENT_CODE = #{old.parentCode} </if>
			<if test="old.seqNo != null "> and SEQ_NO = #{old.seqNo} </if>
			<if test="old.valueContent != null and old.valueContent != ''"> and VALUE_CONTENT = #{old.valueContent} </if>
			<if test="old.valueStatus != null and old.valueStatus != ''"> and VALUE_STATUS = #{old.valueStatus} </if>
		</if>
		<if test="map != null">
			<!-- Equal query -->
			<if test="map.version != null "> and VERSION = #{map.version} </if>
			<if test="map.delFlag != null and map.delFlag != ''"> and DEL_FLAG = #{map.delFlag} </if>
			<if test="map.createBy != null and map.createBy != ''"> and CREATE_BY = #{map.createBy} </if>
			<if test="map.createTime != null "><![CDATA[ and CREATE_TIME = #{map.createTime}]]> </if>
			<if test="map.updateBy != null and map.updateBy != ''"> and UPDATE_BY = #{map.updateBy} </if>
			<if test="map.updateTime != null "><![CDATA[ and UPDATE_TIME = #{map.updateTime}]]> </if>
			<if test="map.treeId != null and map.treeId != ''"> and TREE_ID = #{map.treeId} </if>
			<if test="map.nodeLayer != null "> and NODE_LAYER = #{map.nodeLayer} </if>
			<if test="map.nodeCode != null and map.nodeCode != ''"> and NODE_CODE = #{map.nodeCode} </if>
			<if test="map.tenantCode != null and map.tenantCode != ''"> and TENANT_CODE = #{map.tenantCode} </if>
			<if test="map.id != null and map.id != ''"> and ID = #{map.id} </if>
			<if test="map.keyCode != null and map.keyCode != ''"> and KEY_CODE = #{map.keyCode} </if>
			<if test="map.keyName != null and map.keyName != ''"> and KEY_NAME = #{map.keyName} </if>
			<if test="map.parentCode != null and map.parentCode != ''"> and PARENT_CODE = #{map.parentCode} </if>
			<if test="map.seqNo != null "> and SEQ_NO = #{map.seqNo} </if>
			<if test="map.valueContent != null and map.valueContent != ''"> and VALUE_CONTENT = #{map.valueContent} </if>
			<if test="map.valueStatus != null and map.valueStatus != ''"> and VALUE_STATUS = #{map.valueStatus} </if>
			<!-- In query -->
			<if test="map.idList != null and map.idList.size()>0">
			and ID in <foreach item="item" index="index" collection="map.idList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.keyCodeList != null and map.keyCodeList.size()>0">
			and KEY_CODE in <foreach item="item" index="index" collection="map.keyCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.keyNameList != null and map.keyNameList.size()>0">
			and KEY_NAME in <foreach item="item" index="index" collection="map.keyNameList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.nodeCodeList != null and map.nodeCodeList.size()>0">
			and NODE_CODE in <foreach item="item" index="index" collection="map.nodeCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.nodeLayerList != null and map.nodeLayerList.size()>0">
			and NODE_LAYER in <foreach item="item" index="index" collection="map.nodeLayerList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.parentCodeList != null and map.parentCodeList.size()>0">
			and PARENT_CODE in <foreach item="item" index="index" collection="map.parentCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.seqNoList != null and map.seqNoList.size()>0">
			and SEQ_NO in <foreach item="item" index="index" collection="map.seqNoList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.tenantCodeList != null and map.tenantCodeList.size()>0">
			and TENANT_CODE in <foreach item="item" index="index" collection="map.tenantCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.treeIdList != null and map.treeIdList.size()>0">
			and TREE_ID in <foreach item="item" index="index" collection="map.treeIdList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.valueContentList != null and map.valueContentList.size()>0">
			and VALUE_CONTENT in <foreach item="item" index="index" collection="map.valueContentList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.valueStatusList != null and map.valueStatusList.size()>0">
			and VALUE_STATUS in <foreach item="item" index="index" collection="map.valueStatusList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
		</if>
		<!-- 防止没有参数传递，导致全部更新 -->
		or 1=2
		</where>
	</update>
	<!-- 删除 -->
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<if test="model != null">
			<!-- Equal query -->
			<if test="model.version != null "> and VERSION = #{model.version} </if>
			<if test="model.delFlag != null and model.delFlag != ''"> and DEL_FLAG = #{model.delFlag} </if>
			<if test="model.createBy != null and model.createBy != ''"> and CREATE_BY = #{model.createBy} </if>
			<if test="model.createTime != null "><![CDATA[ and CREATE_TIME = #{model.createTime}]]> </if>
			<if test="model.updateBy != null and model.updateBy != ''"> and UPDATE_BY = #{model.updateBy} </if>
			<if test="model.updateTime != null "><![CDATA[ and UPDATE_TIME = #{model.updateTime}]]> </if>
			<if test="model.treeId != null and model.treeId != ''"> and TREE_ID = #{model.treeId} </if>
			<if test="model.nodeLayer != null "> and NODE_LAYER = #{model.nodeLayer} </if>
			<if test="model.nodeCode != null and model.nodeCode != ''"> and NODE_CODE = #{model.nodeCode} </if>
			<if test="model.tenantCode != null and model.tenantCode != ''"> and TENANT_CODE = #{model.tenantCode} </if>
			<if test="model.id != null and model.id != ''"> and ID = #{model.id} </if>
			<if test="model.keyCode != null and model.keyCode != ''"> and KEY_CODE = #{model.keyCode} </if>
			<if test="model.keyName != null and model.keyName != ''"> and KEY_NAME = #{model.keyName} </if>
			<if test="model.parentCode != null and model.parentCode != ''"> and PARENT_CODE = #{model.parentCode} </if>
			<if test="model.seqNo != null "> and SEQ_NO = #{model.seqNo} </if>
			<if test="model.valueContent != null and model.valueContent != ''"> and VALUE_CONTENT = #{model.valueContent} </if>
			<if test="model.valueStatus != null and model.valueStatus != ''"> and VALUE_STATUS = #{model.valueStatus} </if>
		</if>
		<if test="map != null">
			<!-- Equal query -->
			<if test="map.version != null "> and VERSION = #{map.version} </if>
			<if test="map.delFlag != null and map.delFlag != ''"> and DEL_FLAG = #{map.delFlag} </if>
			<if test="map.createBy != null and map.createBy != ''"> and CREATE_BY = #{map.createBy} </if>
			<if test="map.createTime != null "><![CDATA[ and CREATE_TIME = #{map.createTime}]]> </if>
			<if test="map.updateBy != null and map.updateBy != ''"> and UPDATE_BY = #{map.updateBy} </if>
			<if test="map.updateTime != null "><![CDATA[ and UPDATE_TIME = #{map.updateTime}]]> </if>
			<if test="map.treeId != null and map.treeId != ''"> and TREE_ID = #{map.treeId} </if>
			<if test="map.nodeLayer != null "> and NODE_LAYER = #{map.nodeLayer} </if>
			<if test="map.nodeCode != null and map.nodeCode != ''"> and NODE_CODE = #{map.nodeCode} </if>
			<if test="map.tenantCode != null and map.tenantCode != ''"> and TENANT_CODE = #{map.tenantCode} </if>
			<if test="map.id != null and map.id != ''"> and ID = #{map.id} </if>
			<if test="map.keyCode != null and map.keyCode != ''"> and KEY_CODE = #{map.keyCode} </if>
			<if test="map.keyName != null and map.keyName != ''"> and KEY_NAME = #{map.keyName} </if>
			<if test="map.parentCode != null and map.parentCode != ''"> and PARENT_CODE = #{map.parentCode} </if>
			<if test="map.seqNo != null "> and SEQ_NO = #{map.seqNo} </if>
			<if test="map.valueContent != null and map.valueContent != ''"> and VALUE_CONTENT = #{map.valueContent} </if>
			<if test="map.valueStatus != null and map.valueStatus != ''"> and VALUE_STATUS = #{map.valueStatus} </if>
			<!-- In query -->
			<if test="map.idList != null and map.idList.size()>0">
			and ID in <foreach item="item" index="index" collection="map.idList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.keyCodeList != null and map.keyCodeList.size()>0">
			and KEY_CODE in <foreach item="item" index="index" collection="map.keyCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.keyNameList != null and map.keyNameList.size()>0">
			and KEY_NAME in <foreach item="item" index="index" collection="map.keyNameList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.nodeCodeList != null and map.nodeCodeList.size()>0">
			and NODE_CODE in <foreach item="item" index="index" collection="map.nodeCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.nodeLayerList != null and map.nodeLayerList.size()>0">
			and NODE_LAYER in <foreach item="item" index="index" collection="map.nodeLayerList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.parentCodeList != null and map.parentCodeList.size()>0">
			and PARENT_CODE in <foreach item="item" index="index" collection="map.parentCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.seqNoList != null and map.seqNoList.size()>0">
			and SEQ_NO in <foreach item="item" index="index" collection="map.seqNoList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.tenantCodeList != null and map.tenantCodeList.size()>0">
			and TENANT_CODE in <foreach item="item" index="index" collection="map.tenantCodeList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.treeIdList != null and map.treeIdList.size()>0">
			and TREE_ID in <foreach item="item" index="index" collection="map.treeIdList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.valueContentList != null and map.valueContentList.size()>0">
			and VALUE_CONTENT in <foreach item="item" index="index" collection="map.valueContentList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
			<if test="map.valueStatusList != null and map.valueStatusList.size()>0">
			and VALUE_STATUS in <foreach item="item" index="index" collection="map.valueStatusList" open="(" separator="," close=") ">#{item}</foreach>
			</if>
		</if>
		<!-- 防止没有参数传递，导致全部删除 -->
		or 1=2
		</where>
	</delete>
	<!-- 树结构相关操作 -->
	<!-- 查询子节点列表 -->
	<select id="selectChildrenNodes" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.entity.UupmDictionaryEntity">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
			<if test="nodeLayer != null "><![CDATA[ and t.NODE_LAYER <= #{nodeLayer} ]]></if>
			and t.TREE_ID = #{treeId}
			and t.NODE_LEFT between #{nodeLeft} and #{nodeRight}
		</where>
		order by t.SEQ_NO asc
	</select>
	<!-- 查询父节点列表 -->
	<select id="selectParentNodes" parameterType="java.util.Map" resultType="com.yffd.easy.uupm.entity.UupmDictionaryEntity">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<if test="tenantCode != null and tenantCode != ''"> and t.TENANT_CODE = #{tenantCode} </if>
			and t.TREE_ID = #{treeId}
			<![CDATA[ and t.NODE_LEFT < #{nodeLeft} ]]>
			<![CDATA[ and t.NODE_RIGHT > #{nodeRight} ]]>
		</where>
		order by t.SEQ_NO asc
	</select>
	<!-- 查询节点的层号，即深度 -->
	<select id="countLayer" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(*)
		from <include refid="table_name"/>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and TREE_ID = #{treeId}
		<![CDATA[ and NODE_LEFT <= #{nodeLeft} ]]>
		<![CDATA[ and NODE_RIGHT >= #{nodeRight} ]]>
		</where>
	</select>
	<!-- 添加新节点时，修改节点的偏序号 -->
	<update id="updateLeftForAdd" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_LEFT = NODE_LEFT + #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and TREE_ID = #{treeId}
		and NODE_LEFT >= #{nodeRight}
		</where>
	</update>
	<!-- 添加新节点时，修改节点的偏序号 -->
	<update id="updateRightForAdd" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_RIGHT = NODE_RIGHT + #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and TREE_ID = #{treeId}
		and NODE_RIGHT >= #{nodeRight}
		</where>
	</update>
	<!-- 删除节点时，修改节点的偏序号 -->
	<update id="updateLeftForDel" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_LEFT = NODE_LEFT - #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and TREE_ID = #{treeId}
		and NODE_LEFT > #{nodeLeft}
		</where>
	</update>
	<!-- 删除节点时，修改节点的偏序号 -->
	<update id="updateRightForDel" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="updateBy != null and updateBy != ''"> UPDATE_BY = #{updateBy}, </if>
		<if test="updateTime != null "> UPDATE_TIME = #{updateTime}, </if>
		VERSION = VERSION + 1, 
		NODE_RIGHT = NODE_RIGHT - #{nodeStep},
		</set>
		<where>
		<if test="tenantCode != null and tenantCode != ''"> and TENANT_CODE = #{tenantCode} </if>
		and TREE_ID = #{treeId}
		and NODE_RIGHT > #{nodeRight}
		</where>
	</update>
	<!-- 更新节点，以及子孙节点 -->
	<update id="updateNodes" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="model != null">
			VERSION = VERSION + 1, 
			<if test="model.updateBy != null and model.updateBy != ''"> UPDATE_BY = #{model.updateBy},  </if>
			<if test="model.updateTime != null"> UPDATE_TIME = #{model.updateTime},  </if>
		</if>
		</set>
		<where>
		<if test="old != null">
			<if test="old.tenantCode != null and old.tenantCode != ''"> and TENANT_CODE = #{old.tenantCode} </if>
			and TREE_ID = #{old.treeId}
			<![CDATA[ and NODE_LEFT >= #{old.nodeLeft} ]]>
			<![CDATA[ and NODE_RIGHT <= #{old.nodeRight} ]]>
		</if>
		</where>
	</update>
	<!-- 删除节点，以及子孙节点 -->
	<delete id="deleteNodes" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
		<if test="model != null">
			<if test="model.tenantCode != null and model.tenantCode != ''"> and TENANT_CODE = #{model.tenantCode} </if>
			and TREE_ID = #{model.treeId}
			<![CDATA[ and NODE_LEFT >= #{model.nodeLeft} ]]>
			<![CDATA[ and NODE_RIGHT <= #{model.nodeRight} ]]>
		</if>
		</where>
	</delete>
	<!-- ######################################################################### -->
	<!-- ##########################   common sql end    ########################## -->
	<!-- ######################################################################### -->

</mapper>
