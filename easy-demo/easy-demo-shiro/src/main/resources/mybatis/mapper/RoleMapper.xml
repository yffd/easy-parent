<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yffd.easy.demo.shiro.dao.IRoleDao">


	<!-- ######################################################################### -->
	<!-- #########################   common sql begin    ######################### -->
	<!-- ######################################################################### -->
	
	<!-- 表名 -->
	<sql id="table_name"> sec_role </sql>
	<!-- 列名 -->
	<sql id="table_columns">
		t.role_id as roleId, t.role_name as roleName
	</sql>
	<!-- 分页条件 -->
	<sql id="conditions_limit"><if test="page != null"> limit #{page.startIndex}, #{page.pageLimit} </if></sql>
	<!-- 排序条件 -->
	<sql id="conditions_orderby">
		<choose>
			<when test="orderBy != null and orderBy !=''"> ORDER BY #{orderBy} </when>
			<otherwise> ORDER BY roleId desc </otherwise>
		</choose>
	</sql>
	<!-- 动态组装复合查询条件 -->
	<sql id="conditions_where">
		<if test="entity != null">
			<!-- Equal query -->
			<if test="entity.roleId != null and entity.roleId != ''"> and t.role_id = #{entity.roleId} </if>
			<if test="entity.roleName != null and entity.roleName != ''"> and t.role_name = #{entity.roleName} </if>
		</if>
	</sql>
	<!-- 条件查询 -->
	<select id="selectListBy" parameterType="java.util.Map" resultType="com.yffd.easy.demo.shiro.model.Role">
		select <include refid="table_columns" />
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
		<include refid="conditions_orderby" />
		<include refid="conditions_limit" />
	</select>
	<!-- 统计查询 -->
	<select id="selectCountBy" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from 
		<include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条查询 -->
	<select id="selectOneBy" parameterType="java.util.Map" resultType="com.yffd.easy.demo.shiro.model.Role">
		select <include refid="table_columns" /> 
		from <include refid="table_name"/> as t 
		<where>
			<include refid="conditions_where" />
		</where>
	</select>
	<!-- 单条插入 -->
	<insert id="insertOneBy" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table_name" />
		(role_id, role_name)
		values
		(#{roleId}, #{roleName})
	</insert>
	<!-- 批量插入 -->
	<insert id="insertListBy" parameterType="java.util.Map" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="table_name" />
		(role_id, role_name)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.roleId},#{item.roleName})
		</foreach>
	</insert>
	<!-- 更新 -->
	<update id="updateBy" parameterType="java.util.Map">
		update <include refid="table_name" />
		<set>
		<if test="entity != null">
			VERSION = VERSION + 1, 
			<if test="entity.roleName != null and entity.roleName != ''"> role_name = #{entity.roleName},  </if>
		</if>
		</set>
		<where>
			role_id = #{entityOld.roleId}
		</where>
	</update>
	<!-- 删除 -->
	<delete id="deleteBy" parameterType="java.util.Map">
		delete from <include refid="table_name" />
		<where>
			role_id = #{entityOld.roleId}
		</where>
	</delete>
	<!-- ######################################################################### -->
	<!-- ##########################   common sql end    ########################## -->
	<!-- ######################################################################### -->

	<select id="selectRoleByUser" parameterType="java.util.Map" resultType="com.yffd.easy.demo.shiro.model.Role">
		select * 
		from sec_role r LEFT JOIN sec_user_role ur ON r.role_id=ur.role_id LEFT JOIN sec_user u on ur.user_id=u.user_id
		<where>
			and r.role_id is not null
			and u.user_name = #{userName}
		</where>
	</select>
	
</mapper>
