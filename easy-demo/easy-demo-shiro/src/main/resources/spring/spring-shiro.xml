<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	    default-lazy-init="true">
	
	<!-- ::自定义shiro拦截器 -->
	<bean id="loginPathMatchingFilter" class="com.yffd.easy.demo.shiro.custom.filter.LoginPathMatchingFilter"/>
	<bean id="rolePathMatchingFilter" class="com.yffd.easy.demo.shiro.custom.filter.RolePathMatchingFilter"/>
	<bean id="permissionPathMatchingFilter" class="com.yffd.easy.demo.shiro.custom.filter.PermissionPathMatchingFilter"/>
	
	<!-- 对应于web.xml中配置的那个shiroFilter -->
	<!-- 1、先执行Shiro自己的Filter链；2、再执行Servlet容器的Filter链（即原始的Filter）-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/login.html"/>
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
        <!-- <property name="successUrl" value="/" ></property> -->
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->
        <property name="unauthorizedUrl" value="/error/unauthorized"/>
        <property name="filterChainDefinitions">
        <!-- authc:身份验证通过 、user:身份验证通过或RememberMe登录 -->
            <value>
<!--                 /admin/**=authc -->
<!--                 /admin/**=login -->
<!--                 /admin/**=role[admin] -->
                /admin/**=permission[user:create]
                /html/**=user
            </value>
        </property>
        <property name="filters">
           <util:map>
              <entry key="login" value-ref="loginPathMatchingFilter"/>
              <entry key="role" value-ref="rolePathMatchingFilter"/>
              <entry key="permission" value-ref="permissionPathMatchingFilter"/>
<!--               <entry key="simple" value-ref="simple"></entry> -->
<!--               <entry key="kickout" value-ref="kickoutSessionFilter"></entry> -->
           </util:map>
       </property>
    </bean>
    
    <!-- ::安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="securityRealm"/>
<!--     	<property name="cacheManager" ref="cacheManager"/> -->
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>
    
    <!-- ::安全数据源 -->
    <bean id="securityRealm" class="com.yffd.easy.demo.shiro.custom.realm.SecurityRealm">
    	<property name="securityService" ref="securityService"/>
    	<!-- 指定密码匹配器 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.yffd.easy.demo.shiro.custom.credential.RetryLimitHashedCredentialsMatcher"/>
    
    <!-- ::缓存管理器 jedis实现 -->  
<!-- 	<bean id="cacheManager" class="com.yffd.easy.demo.shiro.custom.cache.JedisCacheManager"> -->
<!-- 		<property name="jedisManager" ref="jedisManager"/> -->
<!-- 	</bean> -->
	
	<!-- ::会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	 	 <!-- session 有效时间为半小时 （毫秒单位）-->
    	<property name="globalSessionTimeout" value="1800000"/>
    	<!-- 是否删除无效的，默认也是开启 -->
    	<property name="deleteInvalidSessions" value="true"/>
    	<!-- session 监听，可以多个 -->
	   	<property name="sessionListeners">
	   		<list>
	   			<ref bean="sessionListener"/>
	   		</list>
	   	</property>
    	<property name="sessionDAO" ref="sessionDAO"/>
    </bean>
	<!-- session监听 -->
	<bean id="sessionListener" class="com.yffd.easy.demo.shiro.custom.session.listener.JedisSessionListener">
		<property name="jedisManager" ref="jedisManager"/>
	</bean>
	<!-- 会话DAO -->
	<bean id="sessionDAO" class="com.yffd.easy.demo.shiro.custom.session.dao.JedisChacheSessionDao">
		<property name="jedisManager" ref="jedisManager"/>
	</bean>
	
    <!-- ::rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <!-- 会话Cookie模板（客户端） -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="shiro-cid"/>
		<property name="httpOnly" value="true"/>
		<property name="maxAge" value="2592000"/><!-- 30天 -->
	</bean>
    
    <!-- ::生命周期处理器-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- ::jedis管理器 -->
	<bean id="jedisManager" class="com.yffd.easy.demo.shiro.custom.jedis.JedisSingleManager">
		<property name="jedisPool" ref="jedisPool"/>
		<property name="name" value="shiro"/>
		<property name="dbIndex" value="5"/>
	</bean>
    <!-- Shiro的注解配置一定要放在spring-mvc中 -->
</beans>