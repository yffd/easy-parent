<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.yffd.easy.demo.shiro.controller" />
    
	<!-- 处理在类级别上的@RequestMapping注解 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="order" value="1" />
	</bean>
	<!-- 处理在方法级别上的@RequestMapping注解 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- 启动JSON格式的配置 -->
				<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
					<property name="supportedMediaTypes">
						<list>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="text"/>
								<constructor-arg index="1" value="plain"/>
								<constructor-arg index="2" value="UTF-8"/>  
						    </bean>  
						    <bean class="org.springframework.http.MediaType">
						    	<constructor-arg index="0" value="*"/>
						    	<constructor-arg index="1" value="*"/>
						    	<constructor-arg index="2" value="UTF-8"/>  
						    </bean>  
						    <bean class="org.springframework.http.MediaType">
						    	<constructor-arg index="0" value="text"/>
						    	<constructor-arg index="1" value="*"/>
						    	<constructor-arg index="2" value="UTF-8"/>  
						    </bean>  
						    <bean class="org.springframework.http.MediaType">
						    	<constructor-arg index="0" value="application"/>
						    	<constructor-arg index="1" value="json"/>
						    	<constructor-arg index="2" value="UTF-8"/>  
						    </bean>
<!-- 							<value>text/html;charset=UTF-8</value> -->
<!-- 							<value>application/json;charset=UTF-8</value> -->
<!-- 							<value>application/x-www-form-urlencoded</value> -->
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!--===============通用视图解析器 begin===============-->
	<!-- JSP视图解析器，对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1"/>
	</bean>
	
    <!--===============通用视图解析器 end===============-->
    
	<!-- 静态资源问题，不需要进行拦截过滤，主要是针对css，js，image等资源 -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />
	<mvc:resources mapping="/html/**" location="/html/" />
	
	<!-- 开启shiro注解-->
<!--     <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" -->
<!--           depends-on="lifecycleBeanPostProcessor"> -->
<!--         <property name="proxyTargetClass" value="true" /> -->
<!--     </bean> -->
    
<!-- 	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> -->
<!--         <property name="securityManager" ref="securityManager"/> -->
<!--     </bean> -->

	<bean
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--表示捕获的异常 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    <!--捕获该异常时跳转的路径 -->
                    /error/unauthorized
                </prop>
                <!--表示捕获的异常 -->
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    <!--捕获该异常时跳转的路径 -->
                    /error/unauthorized
                </prop>
            </props>
        </property>
    </bean>
    
</beans>